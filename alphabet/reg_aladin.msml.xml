
<msml:operator xmlns:msml="http://sfb125.de/msml"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://sfb125.de/msml"
               name="reg_aladin">

    <annotation>
        <entry key="doc">
            RegAladin (NiftyReg)
            ===========

            

            Module/executable for global registration (rigid and/or affine) based on a block-matching approach and a trimmed least squared optimisation.

            :License: BSD
            :Contributor: Marc Modat, Pankaj Daga, David Cash (UCL)
        </entry>
        <entry key="category" value="Registration.NiftyReg" />
    </annotation>


    <runtime>
        <sh template="reg_aladin {{toutputWarpedImageName|option('res')}} {{toutputAffineFileName|option('aff')}} {{smoothReferenceWidth|option('smooR')}} {{smoothFloatingWidth|option('smooF')}} {{referenceLowerThreshold|option('refLowThr')}} {{referenceUpperThreshold|option('refUpThr')}} {{floatingLowerThreshold|option('floLowThr')}} {{floatingUpperThreshold|option('floUpThr')}} {{levelPyramidNumber|option('ln')}} {{levelToPerformNumber|option('lp')}} {{iterationNumber|option('maxit')}} {{blockPercentage|option('pv')}} {{inlierPercentage|option('pi')}} {{noSym|flag('noSym')}} {{rigidOnly|flag('rigOnly')}} {{affineOnly|flag('affDirect')}} {{useHeaderOrigin|flag('nac')}} {{makeIsotropic|flag('iso')}} {{interpolation|option('interp')}}  {{referenceImageName|option('ref')}} {{floatingImageName|option('flo')}} {{referenceMaskImageName|option('rmask')}} {{floatingMaskImageName|option('fmask')}} {{inputAffineName|option('inaff')}}"/>
    </runtime>

    <input>
    
        <arg name="referenceImageName" 
             physical="PNG"
             
             >
            <meta key="doc">
            <![CDATA[Reference image
                    
                    Reference image filename (also called Target or Fixed)]]>
            </meta>
        </arg>

        <arg name="floatingImageName" 
             physical="PNG"
             
             >
            <meta key="doc">
            <![CDATA[Floating image
                    
                    Floating image filename (also called Source or moving)]]>
            </meta>
        </arg>

        <arg name="referenceMaskImageName" 
             physical="PNG"
             
             >
            <meta key="doc">
            <![CDATA[Ref. mask
                    
                    Filename of a mask image in the reference space]]>
            </meta>
        </arg>

        <arg name="floatingMaskImageName" 
             physical="PNG"
             
             >
            <meta key="doc">
            <![CDATA[Flo. mask
                    
                    Filename of a mask image in the floating space. Only used when symmetric turned on]]>
            </meta>
        </arg>

        <arg name="inputAffineName" 
             physical="txt"
             
             >
            <meta key="doc">
            <![CDATA[Input affine trans. from NiftyReg
                    
                    Affine registration matrix stored as a text file]]>
            </meta>
        </arg>

    </input>

    <output>
    
        <arg name="outputAffineFileName" 
             physical="txt"
             
             >
            <meta key="doc">
            <![CDATA[Output affine filename
                    
                    Affine registration matrix output, saved as a text file]]>
            </meta>
        </arg>

        <arg name="outputWarpedImageName" 
             physical="PNG"
             
             >
            <meta key="doc">
            <![CDATA[Output warped image
                    
                    Warped floating image]]>
            </meta>
        </arg>

    </output>

    <parameters>
    
        <arg name="toutputWarpedImageName" 
             physical="str"
             
             target="true">
            <meta key="doc">
            <![CDATA[Output warped image
                    
                    Warped floating image]]>
            </meta>
        </arg>

        <arg name="toutputAffineFileName" 
             physical="str"
             
             target="true">
            <meta key="doc">
            <![CDATA[Output affine filename
                    
                    Affine registration matrix output, saved as a text file]]>
            </meta>
        </arg>

        <arg name="smoothReferenceWidth" 
             physical="float"
             
             >
            <meta key="doc">
            <![CDATA[Ref .Smooth
                    
                    Standard deviation in mm (voxel if negative) of the Gaussian kernel used to smooth the reference image
                    :Possible Values: []]]>
            </meta>
        </arg>

        <arg name="smoothFloatingWidth" 
             physical="float"
             
             >
            <meta key="doc">
            <![CDATA[Flo. smooth
                    
                    Standard deviation in mm (voxel if negative) of the Gaussian kernel used to smooth the Floating image
                    :Possible Values: []]]>
            </meta>
        </arg>

        <arg name="referenceLowerThreshold" 
             physical="float"
             
             >
            <meta key="doc">
            <![CDATA[Ref. Low Thr.
                    
                    Lower threshold value applied to the reference image
                    :Possible Values: []]]>
            </meta>
        </arg>

        <arg name="referenceUpperThreshold" 
             physical="float"
             
             >
            <meta key="doc">
            <![CDATA[Ref. Up Thr.
                    
                    Upper threshold value applied to the reference image
                    :Possible Values: []]]>
            </meta>
        </arg>

        <arg name="floatingLowerThreshold" 
             physical="float"
             
             >
            <meta key="doc">
            <![CDATA[Flo. Low Thr.
                    
                    Lower threshold value applied to the floating image
                    :Possible Values: []]]>
            </meta>
        </arg>

        <arg name="floatingUpperThreshold" 
             physical="float"
             
             >
            <meta key="doc">
            <![CDATA[Flo. Up Thr.
                    
                    Upper threshold value applied to the floating image
                    :Possible Values: []]]>
            </meta>
        </arg>

        <arg name="levelPyramidNumber" 
             physical="int"
             
             >
            <meta key="doc">
            <![CDATA[Level number
                    
                    Number of levels to use to generate the pyramids for the coarse-to-fine approach]]>
            </meta>
        </arg>

        <arg name="levelToPerformNumber" 
             physical="int"
             
             >
            <meta key="doc">
            <![CDATA[Level to perform
                    
                    Number of levels to use to run the registration once the pyramids have been created]]>
            </meta>
        </arg>

        <arg name="iterationNumber" 
             physical="int"
             
             >
            <meta key="doc">
            <![CDATA[Iteration number
                    
                    Maximal number of iterations of the trimmed least square approach to perform per level]]>
            </meta>
        </arg>

        <arg name="blockPercentage" 
             physical="float"
             
             >
            <meta key="doc">
            <![CDATA[Percentage block
                    
                    Percentage of blocks to use in the optimisation scheme
                    :Possible Values: []]]>
            </meta>
        </arg>

        <arg name="inlierPercentage" 
             physical="float"
             
             >
            <meta key="doc">
            <![CDATA[Percentage inlier
                    
                    Percentage of blocks to consider as inlier in the optimisation scheme
                    :Possible Values: []]]>
            </meta>
        </arg>

        <arg name="noSym" 
             physical="bool"
             
             >
            <meta key="doc">
            <![CDATA[Disable symmetry
                    
                    The symmetric version of the algorithm is used by default. Use this flag to disable it]]>
            </meta>
        </arg>

        <arg name="rigidOnly" 
             physical="bool"
             
             >
            <meta key="doc">
            <![CDATA[Rigid only
                    
                    Performs only a rigid registration, rigid then affine by default]]>
            </meta>
        </arg>

        <arg name="affineOnly" 
             physical="bool"
             
             >
            <meta key="doc">
            <![CDATA[Affine only
                    
                    Performs only an affine registration, rigid then affine by default]]>
            </meta>
        </arg>

        <arg name="useHeaderOrigin" 
             physical="bool"
             
             >
            <meta key="doc">
            <![CDATA[Use header
                    
                    Use the nifti header origin to initialise the transformation. Image centres are used by default]]>
            </meta>
        </arg>

        <arg name="makeIsotropic" 
             physical="bool"
             
             >
            <meta key="doc">
            <![CDATA[Make images isotropic
                    
                    Make floating and reference images isotropic if required]]>
            </meta>
        </arg>

        <arg name="interpolation" 
             physical="vector.int"
             
             >
            <meta key="doc">
            <![CDATA[Interpolation order
                    
                    Interpolation order to use internally to warp the floating image
                    :Possible Values: ['0', '1', '3']]]>
            </meta>
        </arg>

    </parameters>
</msml:operator>